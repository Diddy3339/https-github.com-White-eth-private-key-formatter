# This# Install the eth_keys library
pip install eth_keys

# Import the necessary modules
from eth_keys import keys
from eth_utils import decode_hex

# Your Ethereum private key (in hex format)
private_key_hex = "0x1234567890abcdef1234567890abcdef1234567890abcdef"

# Convert the private key from hex to bytes
private_key_bytes = decode_hex(private_key_hex)

# Create an Ethereum private key object
private_key = keys.PrivateKey(private_key_bytes)

# Get the Ethereum public key
public_key = private_key.public_key

# Get the Ethereum address
address = public_key.to_checksum_address()

print("Private Key:", private_key_hex)
print("Public Key:", public_key.to_hex())
print("Address:", address) is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
